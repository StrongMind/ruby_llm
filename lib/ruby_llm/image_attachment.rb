# frozen_string_literal: true

module RubyLLM
  # A class representing a file attachment that is an image generated by an LLM.
  class ImageAttachment < Attachment
    attr_reader :image, :content, :id, :reasoning_id, :revised_prompt

    def initialize(data:, mime_type:, model_id:, id: nil, reasoning_id: nil, revised_prompt: nil) # rubocop:disable Metrics/ParameterLists
      super(nil, filename: nil)
      @image = Image.new(data:, mime_type:, model_id:)
      @mime_type = mime_type
      @id = id
      @reasoning_id = reasoning_id
      @revised_prompt = revised_prompt
    end

    def image?
      true
    end

    def encoded
      image.data
    end

    def to_h
      { type: :image, source: "data:#{image.mime_type};base64,#{encoded}" }
    end
  end
end
