---
http_interactions:
- request:
    method: get
    uri: https://api.anthropic.com/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      X-Api-Key:
      - "<ANTHROPIC_API_KEY>"
      Anthropic-Version:
      - '2023-06-01'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 24 Aug 2025 09:18:07 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Request-Id:
      - "<REQUEST_ID>"
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Anthropic-Organization-Id:
      - "<ANTHROPIC_ORGANIZATION_ID>"
      X-Envoy-Upstream-Service-Time:
      - '34'
      Via:
      - 1.1 google
      Cf-Cache-Status:
      - DYNAMIC
      X-Robots-Tag:
      - none
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
    body:
      encoding: ASCII-8BIT
      string: '{"data":[{"type":"model","id":"claude-opus-4-1-20250805","display_name":"Claude
        Opus 4.1","created_at":"2025-08-05T00:00:00Z"},{"type":"model","id":"claude-opus-4-20250514","display_name":"Claude
        Opus 4","created_at":"2025-05-22T00:00:00Z"},{"type":"model","id":"claude-sonnet-4-20250514","display_name":"Claude
        Sonnet 4","created_at":"2025-05-22T00:00:00Z"},{"type":"model","id":"claude-3-7-sonnet-20250219","display_name":"Claude
        Sonnet 3.7","created_at":"2025-02-24T00:00:00Z"},{"type":"model","id":"claude-3-5-sonnet-20241022","display_name":"Claude
        Sonnet 3.5 (New)","created_at":"2024-10-22T00:00:00Z"},{"type":"model","id":"claude-3-5-haiku-20241022","display_name":"Claude
        Haiku 3.5","created_at":"2024-10-22T00:00:00Z"},{"type":"model","id":"claude-3-5-sonnet-20240620","display_name":"Claude
        Sonnet 3.5 (Old)","created_at":"2024-06-20T00:00:00Z"},{"type":"model","id":"claude-3-haiku-20240307","display_name":"Claude
        Haiku 3","created_at":"2024-03-07T00:00:00Z"},{"type":"model","id":"claude-3-opus-20240229","display_name":"Claude
        Opus 3","created_at":"2024-02-29T00:00:00Z"}],"has_more":false,"first_id":"claude-opus-4-1-20250805","last_id":"claude-3-opus-20240229"}'
  recorded_at: Sun, 24 Aug 2025 09:18:07 GMT
- request:
    method: get
    uri: https://bedrock.<AWS_REGION>.amazonaws.com/foundation-models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Host:
      - bedrock.<AWS_REGION>.amazonaws.com
      X-Amz-Date:
      - 20250824T091807Z
      X-Amz-Content-Sha256:
      - e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      Authorization:
      - AWS4-HMAC-SHA256 Credential=<AWS_ACCESS_KEY_ID>/20250824/<AWS_REGION>/bedrock/aws4_request,
        SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=bd1e1e196538d3b7402b48be978fc3614123c7eb2b9176d425ec86505649f77a
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 24 Aug 2025 09:18:08 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '70824'
      Connection:
      - keep-alive
      X-Amzn-Requestid:
      - 6377919e-32ed-4ec5-b372-4353901d7d4f
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 24 Aug 2025 09:18:08 GMT
- request:
    method: get
    uri: https://api.deepseek.com/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <DEEPSEEK_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 24 Aug 2025 09:18:09 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - origin, access-control-request-method, access-control-request-headers
      Access-Control-Allow-Credentials:
      - 'true'
      X-Ds-Trace-Id:
      - 0e8abae51bb5338655b17ecdd2f0142e
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - "<COOKIE>"
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
    body:
      encoding: ASCII-8BIT
      string: '{"object":"list","data":[{"id":"deepseek-chat","object":"model","owned_by":"deepseek"},{"id":"deepseek-reasoner","object":"model","owned_by":"deepseek"}]}'
  recorded_at: Sun, 24 Aug 2025 09:18:09 GMT
- request:
    method: get
    uri: https://generativelanguage.googleapis.com/v1beta/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      X-Goog-Api-Key:
      - "<GEMINI_API_KEY>"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sun, 24 Aug 2025 09:18:09 GMT
      Server:
      - scaffolding on HTTPServer2
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=25
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "models": [
            {
              "name": "models/embedding-gecko-001",
              "version": "001",
              "displayName": "Embedding Gecko",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 1024,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedText",
                "countTextTokens"
              ]
            },
            {
              "name": "models/gemini-1.5-pro-latest",
              "version": "001",
              "displayName": "Gemini 1.5 Pro Latest",
              "description": "Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens.",
              "inputTokenLimit": 2000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-pro-002",
              "version": "002",
              "displayName": "Gemini 1.5 Pro 002",
              "description": "Stable version of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens, released in September of 2024.",
              "inputTokenLimit": 2000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-pro",
              "version": "001",
              "displayName": "Gemini 1.5 Pro",
              "description": "Stable version of Gemini 1.5 Pro, our mid-size multimodal model that supports up to 2 million tokens, released in May of 2024.",
              "inputTokenLimit": 2000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-latest",
              "version": "001",
              "displayName": "Gemini 1.5 Flash Latest",
              "description": "Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash",
              "version": "001",
              "displayName": "Gemini 1.5 Flash",
              "description": "Alias that points to the most recent stable version of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-002",
              "version": "002",
              "displayName": "Gemini 1.5 Flash 002",
              "description": "Stable version of Gemini 1.5 Flash, our fast and versatile multimodal model for scaling across diverse tasks, released in September of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-8b",
              "version": "001",
              "displayName": "Gemini 1.5 Flash-8B",
              "description": "Stable version of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "createCachedContent",
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-8b-001",
              "version": "001",
              "displayName": "Gemini 1.5 Flash-8B 001",
              "description": "Stable version of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "createCachedContent",
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-1.5-flash-8b-latest",
              "version": "001",
              "displayName": "Gemini 1.5 Flash-8B Latest",
              "description": "Alias that points to the most recent production (non-experimental) release of Gemini 1.5 Flash-8B, our smallest and most cost effective Flash model, released in October of 2024.",
              "inputTokenLimit": 1000000,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "createCachedContent",
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.5-pro-preview-03-25",
              "version": "2.5-preview-03-25",
              "displayName": "Gemini 2.5 Pro Preview 03-25",
              "description": "Gemini 2.5 Pro Preview 03-25",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash-preview-05-20",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash",
              "version": "001",
              "displayName": "Gemini 2.5 Flash",
              "description": "Stable version of Gemini 2.5 Flash, our mid-size multimodal model that supports up to 1 million tokens, released in June of 2025.",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash-lite-preview-06-17",
              "version": "2.5-preview-06-17",
              "displayName": "Gemini 2.5 Flash-Lite Preview 06-17",
              "description": "Preview release (June 11th, 2025) of Gemini 2.5 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-pro-preview-05-06",
              "version": "2.5-preview-05-06",
              "displayName": "Gemini 2.5 Pro Preview 05-06",
              "description": "Preview release (May 6th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-pro-preview-06-05",
              "version": "2.5-preview-06-05",
              "displayName": "Gemini 2.5 Pro Preview",
              "description": "Preview release (June 5th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-pro",
              "version": "2.5",
              "displayName": "Gemini 2.5 Pro",
              "description": "Stable release (June 17th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-exp",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash Experimental",
              "description": "Gemini 2.0 Flash Experimental",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "bidiGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash",
              "description": "Gemini 2.0 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-001",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash 001",
              "description": "Stable version of Gemini 2.0 Flash, our fast and versatile multimodal model for scaling across diverse tasks, released in January of 2025.",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite-001",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash-Lite 001",
              "description": "Stable version of Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite",
              "version": "2.0",
              "displayName": "Gemini 2.0 Flash-Lite",
              "description": "Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite-preview-02-05",
              "version": "preview-02-05",
              "displayName": "Gemini 2.0 Flash-Lite Preview 02-05",
              "description": "Preview release (February 5th, 2025) of Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-flash-lite-preview",
              "version": "preview-02-05",
              "displayName": "Gemini 2.0 Flash-Lite Preview",
              "description": "Preview release (February 5th, 2025) of Gemini 2.0 Flash-Lite",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 40,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.0-pro-exp",
              "version": "2.5-exp-03-25",
              "displayName": "Gemini 2.0 Pro Experimental",
              "description": "Experimental release (March 25th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-pro-exp-02-05",
              "version": "2.5-exp-03-25",
              "displayName": "Gemini 2.0 Pro Experimental 02-05",
              "description": "Experimental release (March 25th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-exp-1206",
              "version": "2.5-exp-03-25",
              "displayName": "Gemini Experimental 1206",
              "description": "Experimental release (March 25th, 2025) of Gemini 2.5 Pro",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-thinking-exp-01-21",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-thinking-exp",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.0-flash-thinking-exp-1219",
              "version": "2.5-preview-05-20",
              "displayName": "Gemini 2.5 Flash Preview 05-20",
              "description": "Preview release (April 17th, 2025) of Gemini 2.5 Flash",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/gemini-2.5-flash-preview-tts",
              "version": "gemini-2.5-flash-exp-tts-2025-05-19",
              "displayName": "Gemini 2.5 Flash Preview TTS",
              "description": "Gemini 2.5 Flash Preview TTS",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 16384,
              "supportedGenerationMethods": [
                "countTokens",
                "generateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2
            },
            {
              "name": "models/gemini-2.5-pro-preview-tts",
              "version": "gemini-2.5-pro-preview-tts-2025-05-19",
              "displayName": "Gemini 2.5 Pro Preview TTS",
              "description": "Gemini 2.5 Pro Preview TTS",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 16384,
              "supportedGenerationMethods": [
                "countTokens",
                "generateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2
            },
            {
              "name": "models/learnlm-2.0-flash-experimental",
              "version": "2.0",
              "displayName": "LearnLM 2.0 Flash Experimental",
              "description": "LearnLM 2.0 Flash Experimental",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 32768,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2
            },
            {
              "name": "models/gemma-3-1b-it",
              "version": "001",
              "displayName": "Gemma 3 1B",
              "inputTokenLimit": 32768,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3-4b-it",
              "version": "001",
              "displayName": "Gemma 3 4B",
              "inputTokenLimit": 32768,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3-12b-it",
              "version": "001",
              "displayName": "Gemma 3 12B",
              "inputTokenLimit": 32768,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3-27b-it",
              "version": "001",
              "displayName": "Gemma 3 27B",
              "inputTokenLimit": 131072,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3n-e4b-it",
              "version": "001",
              "displayName": "Gemma 3n E4B",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 2048,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemma-3n-e2b-it",
              "version": "001",
              "displayName": "Gemma 3n E2B",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 2048,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64
            },
            {
              "name": "models/gemini-2.5-flash-lite",
              "version": "001",
              "displayName": "Gemini 2.5 Flash-Lite",
              "description": "Stable verion of Gemini 2.5 Flash-Lite, released in July of 2025",
              "inputTokenLimit": 1048576,
              "outputTokenLimit": 65536,
              "supportedGenerationMethods": [
                "generateContent",
                "countTokens",
                "createCachedContent",
                "batchGenerateContent"
              ],
              "temperature": 1,
              "topP": 0.95,
              "topK": 64,
              "maxTemperature": 2,
              "thinking": true
            },
            {
              "name": "models/embedding-001",
              "version": "001",
              "displayName": "Embedding 001",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 2048,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent"
              ]
            },
            {
              "name": "models/text-embedding-004",
              "version": "004",
              "displayName": "Text Embedding 004",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 2048,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent"
              ]
            },
            {
              "name": "models/gemini-embedding-exp-03-07",
              "version": "exp-03-07",
              "displayName": "Gemini Embedding Experimental 03-07",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent",
                "countTextTokens",
                "countTokens"
              ]
            },
            {
              "name": "models/gemini-embedding-exp",
              "version": "exp-03-07",
              "displayName": "Gemini Embedding Experimental",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 8192,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent",
                "countTextTokens",
                "countTokens"
              ]
            },
            {
              "name": "models/gemini-embedding-001",
              "version": "001",
              "displayName": "Gemini Embedding 001",
              "description": "Obtain a distributed representation of a text.",
              "inputTokenLimit": 2048,
              "outputTokenLimit": 1,
              "supportedGenerationMethods": [
                "embedContent",
                "countTextTokens",
                "countTokens"
              ]
            },
            {
              "name": "models/aqa",
              "version": "001",
              "displayName": "Model that performs Attributed Question Answering.",
              "description": "Model trained to return answers to questions that are grounded in provided sources, along with estimating answerable probability.",
              "inputTokenLimit": 7168,
              "outputTokenLimit": 1024,
              "supportedGenerationMethods": [
                "generateAnswer"
              ],
              "temperature": 0.2,
              "topP": 1,
              "topK": 40
            },
            {
              "name": "models/imagen-3.0-generate-002",
              "version": "002",
              "displayName": "Imagen 3.0",
              "description": "Vertex served Imagen 3.0 002 model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            },
            {
              "name": "models/imagen-4.0-generate-preview-06-06",
              "version": "01",
              "displayName": "Imagen 4 (Preview)",
              "description": "Vertex served Imagen 4.0 model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            },
            {
              "name": "models/imagen-4.0-ultra-generate-preview-06-06",
              "version": "01",
              "displayName": "Imagen 4 Ultra (Preview)",
              "description": "Vertex served Imagen 4.0 ultra model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            },
            {
              "name": "models/imagen-4.0-generate-001",
              "version": "001",
              "displayName": "Imagen 4",
              "description": "Vertex served Imagen 4.0 model",
              "inputTokenLimit": 480,
              "outputTokenLimit": 8192,
              "supportedGenerationMethods": [
                "predict"
              ]
            }
          ],
          "nextPageToken": "Ch5tb2RlbHMvaW1hZ2VuLTQuMC1nZW5lcmF0ZS0wMDE="
        }
  recorded_at: Sun, 24 Aug 2025 09:18:09 GMT
- request:
    method: get
    uri: "<GPUSTACK_API_BASE>/models"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 24 Aug 2025 09:18:08 GMT
      Server:
      - uvicorn
      Content-Length:
      - '1705'
      Content-Type:
      - application/json
    body:
      encoding: UTF-8
      string: '{"items":[{"source":"huggingface","huggingface_repo_id":"unsloth/Qwen3-8B-GGUF","huggingface_filename":"*-Q4_K_M*.gguf","ollama_library_model_name":null,"model_scope_model_id":null,"model_scope_file_path":null,"local_path":null,"name":"qwen3","description":"","meta":{"ctx_shift":true,"dry_allowed_length":2,"dry_base":1.75,"dry_multiplier":0.0,"dry_penalty_last_n":-1,"dry_sequence_breakers":["\n",":","\"","*"],"dynatemp_exponent":1.0,"dynatemp_range":0.0,"frequency_penalty":0.0,"min_p":0.0,"mirostat":0,"mirostat_eta":0.10000000149011612,"mirostat_tau":5.0,"n_ctx":8192,"n_ctx_train":40960,"n_embd":4096,"n_params":8190735360,"n_slot":1,"n_slot_ctx":8192,"n_vocab":151936,"presence_penalty":0.0,"prompt_cache":true,"repeat_last_n":64,"repeat_penalty":1.0,"seed":-1,"size":5021827072,"support_audio":false,"support_reasoning":true,"support_speculative":false,"support_tool_calls":true,"support_vision":false,"temperature":0.6000000238418579,"top_k":20,"top_n_sigma":-1.0,"top_p":0.949999988079071,"typical_p":1.0,"vocab_type":2,"xtc_probability":0.0,"xtc_threshold":0.10000000149011612},"replicas":1,"ready_replicas":0,"categories":["llm"],"embedding_only":false,"image_only":false,"reranker":false,"speech_to_text":false,"text_to_speech":false,"placement_strategy":"spread","cpu_offloading":true,"distributed_inference_across_workers":true,"worker_selector":{},"gpu_selector":null,"backend":"llama-box","backend_version":null,"backend_parameters":["--temp=0.6","--top-k=20","--top-p=0.95","--min-p=0"],"env":null,"restart_on_error":true,"distributable":true,"id":1,"created_at":"2025-08-01T11:14:34Z","updated_at":"2025-08-23T11:18:14Z"}],"pagination":{"page":1,"perPage":100,"total":1,"totalPage":1}}'
  recorded_at: Sun, 24 Aug 2025 09:18:09 GMT
- request:
    method: get
    uri: https://api.mistral.ai/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <MISTRAL_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 24 Aug 2025 09:18:09 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Mistral-Correlation-Id:
      - '0198db5e-f150-756a-936e-c2ff757161fb'
      X-Kong-Request-Id:
      - '0198db5e-f150-756a-936e-c2ff757161fb'
      X-Envoy-Upstream-Service-Time:
      - '43'
      Access-Control-Allow-Origin:
      - "*"
      X-Kong-Upstream-Latency:
      - '43'
      X-Kong-Proxy-Latency:
      - '7'
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - "<COOKIE>"
      - "<COOKIE>"
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: '{"object":"list","data":[{"id":"mistral-medium-2505","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2505","description":"Our
        frontier-class multimodal model released May 2025.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-large-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":null,"description":"Official
        None Mistral AI model","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-medium-2508","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2508","description":"Update
        on Mistral Medium 3 with improved capabilities.","max_context_length":131072,"aliases":["mistral-medium-latest","mistral-medium"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-medium-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2508","description":"Update
        on Mistral Medium 3 with improved capabilities.","max_context_length":131072,"aliases":["mistral-medium-2508","mistral-medium"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-medium","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-medium-2508","description":"Update
        on Mistral Medium 3 with improved capabilities.","max_context_length":131072,"aliases":["mistral-medium-2508","mistral-medium-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"ministral-3b-2410","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":false,"audio":false},"name":"ministral-3b-2410","description":"Official
        ministral-3b-2410 Mistral AI model","max_context_length":32768,"aliases":["ministral-3b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"ministral-3b-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":false,"audio":false},"name":"ministral-3b-2410","description":"Official
        ministral-3b-2410 Mistral AI model","max_context_length":32768,"aliases":["ministral-3b-2410"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"ministral-8b-2410","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"ministral-8b-2410","description":"Powerful
        edge model with extremely high performance/price ratio.","max_context_length":131072,"aliases":["ministral-8b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"ministral-8b-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"ministral-8b-2410","description":"Powerful
        edge model with extremely high performance/price ratio.","max_context_length":131072,"aliases":["ministral-8b-2410"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"open-mistral-7b","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-7b","description":"Our
        first dense model released September 2023.","max_context_length":32768,"aliases":["mistral-tiny","mistral-tiny-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-tiny","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-7b","description":"Our
        first dense model released September 2023.","max_context_length":32768,"aliases":["open-mistral-7b","mistral-tiny-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-tiny-2312","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-7b","description":"Our
        first dense model released September 2023.","max_context_length":32768,"aliases":["open-mistral-7b","mistral-tiny"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"open-mistral-nemo","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo-2407","mistral-tiny-2407","mistral-tiny-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"open-mistral-nemo-2407","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo","mistral-tiny-2407","mistral-tiny-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-tiny-2407","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo","open-mistral-nemo-2407","mistral-tiny-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-tiny-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mistral-nemo","description":"Our
        best multilingual open source model released July 2024.","max_context_length":131072,"aliases":["open-mistral-nemo","open-mistral-nemo-2407","mistral-tiny-2407"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"open-mixtral-8x7b","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x7b","description":"Our
        first sparse mixture-of-experts released December 2023.","max_context_length":32768,"aliases":["mistral-small","mistral-small-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-small","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x7b","description":"Our
        first sparse mixture-of-experts released December 2023.","max_context_length":32768,"aliases":["open-mixtral-8x7b","mistral-small-2312"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-small-2312","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x7b","description":"Our
        first sparse mixture-of-experts released December 2023.","max_context_length":32768,"aliases":["open-mixtral-8x7b","mistral-small"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"open-mixtral-8x22b","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x22b","description":"Our
        best open source model to date released April 2024. ","max_context_length":65536,"aliases":["open-mixtral-8x22b-2404"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"open-mixtral-8x22b-2404","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"open-mixtral-8x22b","description":"Our
        best open source model to date released April 2024. ","max_context_length":65536,"aliases":["open-mixtral-8x22b"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-small-2409","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2409","description":"Our
        latest enterprise-grade small model with the latest version v2 released September
        2024. ","max_context_length":32768,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-large-2407","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-large-2407","description":"Our
        top-tier reasoning model for high-complexity tasks with the latest version
        v2 released July 2024.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-large-2411","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-large-2411","description":"Our
        top-tier reasoning model for high-complexity tasks with the lastest version
        released November 2024.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"pixtral-large-2411","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-large-2411","description":"Official
        pixtral-large-2411 Mistral AI model","max_context_length":131072,"aliases":["pixtral-large-latest","mistral-large-pixtral-2411"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"pixtral-large-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-large-2411","description":"Official
        pixtral-large-2411 Mistral AI model","max_context_length":131072,"aliases":["pixtral-large-2411","mistral-large-pixtral-2411"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"mistral-large-pixtral-2411","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-large-2411","description":"Official
        pixtral-large-2411 Mistral AI model","max_context_length":131072,"aliases":["pixtral-large-2411","pixtral-large-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"codestral-2501","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2501","description":"Our
        cutting-edge language model for coding released December 2024.","max_context_length":262144,"aliases":["codestral-2412","codestral-2411-rc5"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-2412","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2501","description":"Our
        cutting-edge language model for coding released December 2024.","max_context_length":262144,"aliases":["codestral-2501","codestral-2411-rc5"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-2411-rc5","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2501","description":"Our
        cutting-edge language model for coding released December 2024.","max_context_length":262144,"aliases":["codestral-2501","codestral-2412"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-2508","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2508","description":"Our
        cutting-edge language model for coding released August 2025.","max_context_length":256000,"aliases":["codestral-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"codestral-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":true,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-2508","description":"Our
        cutting-edge language model for coding released August 2025.","max_context_length":256000,"aliases":["codestral-2508"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"devstral-small-2505","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-small-2505","description":"Our
        small open-source code-agentic model.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-small-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-small-2507","description":"Our
        small open-source code-agentic model.","max_context_length":131072,"aliases":["devstral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-small-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-small-2507","description":"Our
        small open-source code-agentic model.","max_context_length":131072,"aliases":["devstral-small-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-medium-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-medium-2507","description":"Our
        medium code-agentic model.","max_context_length":131072,"aliases":["devstral-medium-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"devstral-medium-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"devstral-medium-2507","description":"Our
        medium code-agentic model.","max_context_length":131072,"aliases":["devstral-medium-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"pixtral-12b-2409","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-12b-2409","description":"A
        12B model with image understanding capabilities in addition to text.","max_context_length":131072,"aliases":["pixtral-12b","pixtral-12b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"pixtral-12b","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-12b-2409","description":"A
        12B model with image understanding capabilities in addition to text.","max_context_length":131072,"aliases":["pixtral-12b-2409","pixtral-12b-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"pixtral-12b-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"pixtral-12b-2409","description":"A
        12B model with image understanding capabilities in addition to text.","max_context_length":131072,"aliases":["pixtral-12b-2409","pixtral-12b"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-2501","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2501","description":"Our
        latest enterprise-grade small model with the latest version released January
        2025. ","max_context_length":32768,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-2503","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2503","description":"Our
        latest enterprise-grade small model with the latest version released March
        2025.","max_context_length":131072,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-2506","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2506","description":"Our
        latest enterprise-grade small model with the latest version released June
        2025.","max_context_length":131072,"aliases":["mistral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-small-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-small-2506","description":"Our
        latest enterprise-grade small model with the latest version released June
        2025.","max_context_length":131072,"aliases":["mistral-small-2506"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-saba-2502","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-saba-2502","description":"Official
        mistral-saba-2502 Mistral AI model","max_context_length":32768,"aliases":["mistral-saba-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"mistral-saba-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-saba-2502","description":"Official
        mistral-saba-2502 Mistral AI model","max_context_length":32768,"aliases":["mistral-saba-2502"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.3,"type":"base"},{"id":"magistral-medium-2506","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-medium-2506","description":"Our
        frontier-class reasoning model released June 2025.","max_context_length":40960,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-medium-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-medium-2507","description":"Our
        frontier-class reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-medium-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-medium-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-medium-2507","description":"Our
        frontier-class reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-medium-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-small-2506","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-small-2506","description":"Our
        efficient reasoning model released June 2025.","max_context_length":40000,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-small-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-small-2507","description":"Our
        efficient reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"magistral-small-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":true,"vision":true,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"magistral-small-2507","description":"Our
        efficient reasoning model released July 2025.","max_context_length":40960,"aliases":["magistral-small-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.7,"type":"base"},{"id":"voxtral-mini-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-mini-2507","description":"A
        mini audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-mini-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"voxtral-mini-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-mini-2507","description":"A
        mini audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-mini-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"voxtral-small-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-small-2507","description":"A
        small audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-small-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"voxtral-small-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":true},"name":"voxtral-small-2507","description":"A
        small audio understanding model released in July 2025","max_context_length":32768,"aliases":["voxtral-small-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.2,"type":"base"},{"id":"mistral-embed","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"mistral-embed","description":"Official
        mistral-embed Mistral AI model","max_context_length":8192,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"codestral-embed","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-embed","description":"Official
        codestral-embed Mistral AI model","max_context_length":8192,"aliases":["codestral-embed-2505"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"codestral-embed-2505","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"codestral-embed","description":"Official
        codestral-embed Mistral AI model","max_context_length":8192,"aliases":["codestral-embed"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"mistral-moderation-2411","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":true,"audio":false},"name":"mistral-moderation-2411","description":"Official
        mistral-moderation-2411 Mistral AI model","max_context_length":8192,"aliases":["mistral-moderation-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"mistral-moderation-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":false,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":true,"moderation":true,"audio":false},"name":"mistral-moderation-2411","description":"Official
        mistral-moderation-2411 Mistral AI model","max_context_length":8192,"aliases":["mistral-moderation-2411"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":null,"type":"base"},{"id":"mistral-ocr-2503","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":true,"classification":false,"moderation":false,"audio":false},"name":"mistral-ocr-2503","description":"Official
        mistral-ocr-2503 Mistral AI model","max_context_length":16384,"aliases":[],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"mistral-ocr-2505","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":true,"classification":false,"moderation":false,"audio":false},"name":"mistral-ocr-2505","description":"Official
        mistral-ocr-2505 Mistral AI model","max_context_length":16384,"aliases":["mistral-ocr-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"mistral-ocr-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":true,"completion_fim":false,"fine_tuning":false,"vision":true,"ocr":true,"classification":false,"moderation":false,"audio":false},"name":"mistral-ocr-2505","description":"Official
        mistral-ocr-2505 Mistral AI model","max_context_length":16384,"aliases":["mistral-ocr-2505"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"voxtral-mini-transcribe-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"voxtral-mini-transcribe-2507","description":"A
        mini transcription model released in July 2025","max_context_length":16384,"aliases":["voxtral-mini-2507","voxtral-mini-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"voxtral-mini-2507","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"voxtral-mini-transcribe-2507","description":"A
        mini transcription model released in July 2025","max_context_length":16384,"aliases":["voxtral-mini-transcribe-2507","voxtral-mini-latest"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"},{"id":"voxtral-mini-latest","object":"model","created":1756027089,"owned_by":"mistralai","capabilities":{"completion_chat":true,"function_calling":false,"completion_fim":false,"fine_tuning":false,"vision":false,"ocr":false,"classification":false,"moderation":false,"audio":false},"name":"voxtral-mini-transcribe-2507","description":"A
        mini transcription model released in July 2025","max_context_length":16384,"aliases":["voxtral-mini-transcribe-2507","voxtral-mini-2507"],"deprecation":null,"deprecation_replacement_model":null,"default_model_temperature":0.0,"type":"base"}]}'
  recorded_at: Sun, 24 Aug 2025 09:18:09 GMT
- request:
    method: get
    uri: "<OLLAMA_API_BASE>/models"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Sun, 24 Aug 2025 09:18:09 GMT
      Content-Length:
      - '449'
    body:
      encoding: UTF-8
      string: '{"object":"list","data":[{"id":"qwen3-coder:latest","object":"model","created":1754474149,"owned_by":"library"},{"id":"gpt-oss:latest","object":"model","created":1754471737,"owned_by":"library"},{"id":"qwen3:latest","object":"model","created":1754046447,"owned_by":"library"},{"id":"mistral-small3.1:latest","object":"model","created":1748946778,"owned_by":"library"},{"id":"gemma3:12b","object":"model","created":1748014509,"owned_by":"library"}]}

        '
  recorded_at: Sun, 24 Aug 2025 09:18:09 GMT
- request:
    method: get
    uri: https://api.openai.com/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 24 Aug 2025 09:18:09 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Openai-Version:
      - '2020-10-01'
      X-Request-Id:
      - "<X_REQUEST_ID>"
      Openai-Processing-Ms:
      - '219'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - "<COOKIE>"
      - "<COOKIE>"
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |-
        {
          "object": "list",
          "data": [
            {
              "id": "gpt-4-0613",
              "object": "model",
              "created": 1686588896,
              "owned_by": "openai"
            },
            {
              "id": "gpt-4",
              "object": "model",
              "created": 1687882411,
              "owned_by": "openai"
            },
            {
              "id": "gpt-3.5-turbo",
              "object": "model",
              "created": 1677610602,
              "owned_by": "openai"
            },
            {
              "id": "gpt-5-nano",
              "object": "model",
              "created": 1754426384,
              "owned_by": "system"
            },
            {
              "id": "gpt-5",
              "object": "model",
              "created": 1754425777,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-mini-2025-08-07",
              "object": "model",
              "created": 1754425867,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-mini",
              "object": "model",
              "created": 1754425928,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-nano-2025-08-07",
              "object": "model",
              "created": 1754426303,
              "owned_by": "system"
            },
            {
              "id": "davinci-002",
              "object": "model",
              "created": 1692634301,
              "owned_by": "system"
            },
            {
              "id": "babbage-002",
              "object": "model",
              "created": 1692634615,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-instruct",
              "object": "model",
              "created": 1692901427,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-instruct-0914",
              "object": "model",
              "created": 1694122472,
              "owned_by": "system"
            },
            {
              "id": "dall-e-3",
              "object": "model",
              "created": 1698785189,
              "owned_by": "system"
            },
            {
              "id": "dall-e-2",
              "object": "model",
              "created": 1698798177,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-1106-preview",
              "object": "model",
              "created": 1698957206,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-1106",
              "object": "model",
              "created": 1698959748,
              "owned_by": "system"
            },
            {
              "id": "tts-1-hd",
              "object": "model",
              "created": 1699046015,
              "owned_by": "system"
            },
            {
              "id": "tts-1-1106",
              "object": "model",
              "created": 1699053241,
              "owned_by": "system"
            },
            {
              "id": "tts-1-hd-1106",
              "object": "model",
              "created": 1699053533,
              "owned_by": "system"
            },
            {
              "id": "text-embedding-3-small",
              "object": "model",
              "created": 1705948997,
              "owned_by": "system"
            },
            {
              "id": "text-embedding-3-large",
              "object": "model",
              "created": 1705953180,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-0125-preview",
              "object": "model",
              "created": 1706037612,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-turbo-preview",
              "object": "model",
              "created": 1706037777,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-0125",
              "object": "model",
              "created": 1706048358,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-turbo",
              "object": "model",
              "created": 1712361441,
              "owned_by": "system"
            },
            {
              "id": "gpt-4-turbo-2024-04-09",
              "object": "model",
              "created": 1712601677,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o",
              "object": "model",
              "created": 1715367049,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-2024-05-13",
              "object": "model",
              "created": 1715368132,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-2024-07-18",
              "object": "model",
              "created": 1721172717,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini",
              "object": "model",
              "created": 1721172741,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-2024-08-06",
              "object": "model",
              "created": 1722814719,
              "owned_by": "system"
            },
            {
              "id": "chatgpt-4o-latest",
              "object": "model",
              "created": 1723515131,
              "owned_by": "system"
            },
            {
              "id": "o1-mini-2024-09-12",
              "object": "model",
              "created": 1725648979,
              "owned_by": "system"
            },
            {
              "id": "o1-mini",
              "object": "model",
              "created": 1725649008,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview-2024-10-01",
              "object": "model",
              "created": 1727131766,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview-2024-10-01",
              "object": "model",
              "created": 1727389042,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview",
              "object": "model",
              "created": 1727460443,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview",
              "object": "model",
              "created": 1727659998,
              "owned_by": "system"
            },
            {
              "id": "omni-moderation-latest",
              "object": "model",
              "created": 1731689265,
              "owned_by": "system"
            },
            {
              "id": "omni-moderation-2024-09-26",
              "object": "model",
              "created": 1732734466,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview-2024-12-17",
              "object": "model",
              "created": 1733945430,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview-2024-12-17",
              "object": "model",
              "created": 1734034239,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-realtime-preview-2024-12-17",
              "object": "model",
              "created": 1734112601,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-audio-preview-2024-12-17",
              "object": "model",
              "created": 1734115920,
              "owned_by": "system"
            },
            {
              "id": "o1-2024-12-17",
              "object": "model",
              "created": 1734326976,
              "owned_by": "system"
            },
            {
              "id": "o1",
              "object": "model",
              "created": 1734375816,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-realtime-preview",
              "object": "model",
              "created": 1734387380,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-audio-preview",
              "object": "model",
              "created": 1734387424,
              "owned_by": "system"
            },
            {
              "id": "o3-mini",
              "object": "model",
              "created": 1737146383,
              "owned_by": "system"
            },
            {
              "id": "o3-mini-2025-01-31",
              "object": "model",
              "created": 1738010200,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-2024-11-20",
              "object": "model",
              "created": 1739331543,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-search-preview-2025-03-11",
              "object": "model",
              "created": 1741388170,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-search-preview",
              "object": "model",
              "created": 1741388720,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-search-preview-2025-03-11",
              "object": "model",
              "created": 1741390858,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-search-preview",
              "object": "model",
              "created": 1741391161,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-transcribe",
              "object": "model",
              "created": 1742068463,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-transcribe",
              "object": "model",
              "created": 1742068596,
              "owned_by": "system"
            },
            {
              "id": "o1-pro-2025-03-19",
              "object": "model",
              "created": 1742251504,
              "owned_by": "system"
            },
            {
              "id": "o1-pro",
              "object": "model",
              "created": 1742251791,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-mini-tts",
              "object": "model",
              "created": 1742403959,
              "owned_by": "system"
            },
            {
              "id": "o3-2025-04-16",
              "object": "model",
              "created": 1744133301,
              "owned_by": "system"
            },
            {
              "id": "o4-mini-2025-04-16",
              "object": "model",
              "created": 1744133506,
              "owned_by": "system"
            },
            {
              "id": "o3",
              "object": "model",
              "created": 1744225308,
              "owned_by": "system"
            },
            {
              "id": "o4-mini",
              "object": "model",
              "created": 1744225351,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-2025-04-14",
              "object": "model",
              "created": 1744315746,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1",
              "object": "model",
              "created": 1744316542,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-mini-2025-04-14",
              "object": "model",
              "created": 1744317547,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-mini",
              "object": "model",
              "created": 1744318173,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-nano-2025-04-14",
              "object": "model",
              "created": 1744321025,
              "owned_by": "system"
            },
            {
              "id": "gpt-4.1-nano",
              "object": "model",
              "created": 1744321707,
              "owned_by": "system"
            },
            {
              "id": "gpt-image-1",
              "object": "model",
              "created": 1745517030,
              "owned_by": "system"
            },
            {
              "id": "codex-mini-latest",
              "object": "model",
              "created": 1746673257,
              "owned_by": "system"
            },
            {
              "id": "o3-pro",
              "object": "model",
              "created": 1748475349,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-realtime-preview-2025-06-03",
              "object": "model",
              "created": 1748907838,
              "owned_by": "system"
            },
            {
              "id": "gpt-4o-audio-preview-2025-06-03",
              "object": "model",
              "created": 1748908498,
              "owned_by": "system"
            },
            {
              "id": "o3-pro-2025-06-10",
              "object": "model",
              "created": 1749166761,
              "owned_by": "system"
            },
            {
              "id": "o4-mini-deep-research",
              "object": "model",
              "created": 1749685485,
              "owned_by": "system"
            },
            {
              "id": "o3-deep-research",
              "object": "model",
              "created": 1749840121,
              "owned_by": "system"
            },
            {
              "id": "o3-deep-research-2025-06-26",
              "object": "model",
              "created": 1750865219,
              "owned_by": "system"
            },
            {
              "id": "o4-mini-deep-research-2025-06-26",
              "object": "model",
              "created": 1750866121,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-chat-latest",
              "object": "model",
              "created": 1754073306,
              "owned_by": "system"
            },
            {
              "id": "gpt-5-2025-08-07",
              "object": "model",
              "created": 1754075360,
              "owned_by": "system"
            },
            {
              "id": "gpt-3.5-turbo-16k",
              "object": "model",
              "created": 1683758102,
              "owned_by": "openai-internal"
            },
            {
              "id": "tts-1",
              "object": "model",
              "created": 1681940951,
              "owned_by": "openai-internal"
            },
            {
              "id": "whisper-1",
              "object": "model",
              "created": 1677532384,
              "owned_by": "openai-internal"
            },
            {
              "id": "text-embedding-ada-002",
              "object": "model",
              "created": 1671217299,
              "owned_by": "openai-internal"
            }
          ]
        }
  recorded_at: Sun, 24 Aug 2025 09:18:09 GMT
- request:
    method: get
    uri: https://openrouter.ai/api/v1/models
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.13.4
      Authorization:
      - Bearer <OPENROUTER_API_KEY>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 24 Aug 2025 09:18:10 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding
      Permissions-Policy:
      - payment=(self "https://checkout.stripe.com" "https://connect-js.stripe.com"
        "https://js.stripe.com" "https://*.js.stripe.com" "https://hooks.stripe.com")
      Referrer-Policy:
      - no-referrer, strict-origin-when-cross-origin
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - "<CF_RAY>"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 24 Aug 2025 09:18:10 GMT
recorded_with: VCR 6.3.1
